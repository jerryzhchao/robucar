<?xml version="1.0"?>

<robot name="robucar" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="laser_enabled" default="false" />
  <xacro:arg name="camera_enabled" default="false" />
  <xacro:arg name="navsat_enabled" default="false" />
  <xacro:arg name="velodyne_enabled" default="false" />

  <xacro:include filename="$(find robucar_description)/urdf/wheel_steered.xacro" />

  <xacro:property name="M_PI" value="3.14159"/>

  <!-- Base Properties -->
  <xacro:property name="mass_base" value="340" />
  <xacro:property name="base_x_size" value="1.66000" />
  <xacro:property name="base_y_size" value="0.60000" />
  <xacro:property name="base_z_size" value="0.66000" />

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="1.22" />
  <xacro:property name="track" value="1.23" />
  <xacro:property name="ground_clearance" value="0.19" />
  <xacro:property name="wheel_x_offset" value="0.0" />
  <xacro:property name="wheel_y_offset" value="0.05" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.1" />
  <xacro:property name="wheel_radius" value="0.28" />

  <!-- LIDAR Properties -->
  <xacro:property name="lidar_ground_clearance" value="0.69" />
  <xacro:property name="lidar_x_offset" value="0.4" />

  <xacro:macro name="robucar">
    <!-- Base footprint is on the ground under the robot -->
    <link name="base_footprint"/>

    <gazebo reference="base_link">
      <material>Gazebo/Grey</material>
    </gazebo>
    <!-- Base link is the center of the robot's bottom plate -->
    <link name="base_link">
      <visual>
        <geometry>
          <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
        </geometry>
        <material name="grey">
          <color rgba="0.6 0.6 0.6 1"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
        </geometry>
      </collision>
    </link>
    <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${ground_clearance + base_z_size/2}" rpy="0 0 0" />
      <child link="base_link" />
      <parent link="base_footprint" />
    </joint>

    <!-- Interial link stores the robot's inertial information -->
    <link name="inertial_link">
      <inertial>
        <mass value="340" />
        <origin xyz="0 0 0" />
        <inertia ixx="${mass_base/12.0 * (base_y_size*base_y_size + base_z_size*base_z_size)}" ixy="0" ixz="0"
                 iyy="${mass_base/12.0 * (base_x_size*base_x_size + base_z_size*base_z_size)}" iyz="0"
                 izz="${mass_base/12.0 * (base_y_size*base_y_size + base_x_size*base_x_size)}" />
      </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="inertial_link" />
    </joint>

    <!-- IMU Link is the standard mounting position for the IMU.-->
    <link name="imu_link"/>
    <joint name="imu_joint" type="fixed">
      <origin xyz="0.35 0 0.1" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="imu_link" />
    </joint>

    <!-- Wheel macros -->
    <xacro:wheel_steered wheel_prefix="front_left" parent_link="base_link" wheel_origin_y="${wheel_y_offset}">
      <origin xyz="${wheelbase/2+wheel_x_offset} ${track/2-wheel_y_offset} ${-base_z_size/2 + wheel_radius - ground_clearance}" rpy="0 0 0" />
    </xacro:wheel_steered>
    <xacro:wheel_steered wheel_prefix="front_right" parent_link="base_link" wheel_origin_y="${-wheel_y_offset}">
      <origin xyz="${wheelbase/2+wheel_x_offset} ${-track/2+wheel_y_offset} ${-base_z_size/2 + wheel_radius - ground_clearance}" rpy="0 0 0" />
    </xacro:wheel_steered>
    <xacro:wheel wheel_prefix="rear_left" parent_link="base_link">
      <origin xyz="${-wheelbase/2+wheel_x_offset} ${track/2} ${-base_z_size/2 + wheel_radius - ground_clearance}" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel wheel_prefix="rear_right" parent_link="base_link">
      <origin xyz="${-wheelbase/2+wheel_x_offset} ${-track/2} ${-base_z_size/2 + wheel_radius - ground_clearance}" rpy="0 0 0" />
    </xacro:wheel>

    <!--<xacro:wheel_steered wheel_prefix="front_left" parent_link="base_link">
      <origin xyz="${wheelbase/2+wheel_x_offset} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel_steered>
    <xacro:wheel_steered wheel_prefix="front_right" parent_link="base_link">
      <origin xyz="${wheelbase/2+wheel_x_offset} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel_steered>
    <xacro:wheel_steered wheel_prefix="rear_left" parent_link="base_link">
      <origin xyz="${-wheelbase/2+wheel_x_offset} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel_steered>
    <xacro:wheel_steered wheel_prefix="rear_right" parent_link="base_link">
      <origin xyz="${-wheelbase/2+wheel_x_offset} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:wheel_steered>-->

    <xacro:if value="$(arg laser_enabled)">
      <!-- Hokuyo UTM-30LX mounted upside down below the body -->
      <!--<xacro:include filename="$(find urg_description)/urdf/hokuyo_utm30lx.urdf.xacro" />
      <xacro:hokuyo_utm30lx name="laser0" parent="base_link" ros_topic="scan" update_rate="40" ray_count="1081" min_angle="-135" max_angle="135">
        <origin xyz="${lidar_x_offset} 0.0 ${lidar_ground_clearance - base_z_size/2 - ground_clearance}" rpy="0 0 0"/>
      </xacro:hokuyo_utm30lx>-->
    </xacro:if>

    <xacro:if value="$(arg camera_enabled)">
      <link name="camera_link"/>
      <joint name="camera_joint" type="fixed">
        <origin xyz="0.35 0 0.41" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="camera_link" />
      </joint>
    </xacro:if>

    <xacro:if value="$(arg navsat_enabled)">
      <link name="navsat_link"/>
      <joint name="navsat_joint" type="fixed">
        <origin xyz="0.3 0 0.3" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="navsat_link" />
      </joint>
    </xacro:if>

    <xacro:if value="$(arg velodyne_enabled)">
      <xacro:include filename="$(find velodyne_description)/urdf/HDL-32E.urdf.xacro"/>
      <HDL-32E parent="base_link" name="velodyne2" topic="/velodyne_points2">
        <origin xyz="${base_x_size/2-0.01} 0 ${base_z_size/2}" rpy="0 0 0" />
      </HDL-32E>
    </xacro:if>


  </xacro:macro>
</robot>
